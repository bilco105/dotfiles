[user]
  name = Rob Greenwood
  email = bilco105@gmail.com
[color]
  ui = auto
[diff]
  tool = vimdiff
  algorithm = patience
  renames = copies
[core]
  editor = /usr/bin/vim
  trustctime = false     # http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/
	excludesfile = /Users/Rob/.gitignore_global
[push]
  default = simple
  followTags = true
[merge]
  log = true
[help]
  autocorrect = 1
[alias]
  # View abbreviated SHA, description, and history graph of the latest 20 commits
  l = log --pretty=oneline -n 20 --graph --abbrev-commit
  # View the current working tree status using the short format
  s = status -s
  # Show the diff between the latest commit and the current state
  d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
  # `git di $number` shows the diff between the state `$number` revisions ago and the current state
  di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
  # Pull in remote changes for the current repository and all its submodules
  p = !"git pull; git submodule foreach git pull origin master"
  # Clone a repository including all submodules
  c = clone --recursive
  # Commit all changes
  ca = !git add -A && git commit -av
  # Switch to a branch, creating it if necessary
  go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
  # Amend the currently staged files to the latest commit
  amend = commit --amend --reuse-message=HEAD
  # List contributors with number of commits
  contributors = shortlog --summary --numbered
  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a
  remotes = remote -v
